{"mappings":"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","sources":["node_modules/nanoid/index.browser.js","src/js/dateParse.js","src/js/notesApp.js","src/js/formatDate.js","src/js/notes_db.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export function dateParse(string) {\n  const regEx = /(0?[1-9]|[12][0-9]|3[01])\\/(0?[1-9]|1[012])\\/((19|20)\\d\\d)/g;\n  const result = string.match(regEx) || [];\n  return result.join(',');\n}\n","import { nanoid } from 'nanoid';\nimport initialNotesValues from './notes_db';\nimport { formatDate } from './formatDate';\nimport { dateParse } from './dateParse';\n\nfunction NoteApp(initialNotes) {\n  const categoriesInfo = [\n    { category: 'Task', icon: 'shopping_cart' },\n    { category: 'Random Thought', icon: 'psychology' },\n    { category: 'Idea', icon: 'lightbulb' },\n    { category: 'Quote', icon: 'format_quote' },\n  ];\n  const notesList = [...initialNotes];\n  const archivedNote = [];\n  let changedNote = {};\n\n  // Selectors\n  const refs = {\n    notesTableBody: document.querySelector('.notes-body'),\n    createNoteBtn: document.querySelector('.create-notes-button'),\n    formEl: document.querySelector('.create-note-form'),\n    backdropNoteEl: document.querySelector('.backdrop-note'),\n    noteNameInput: document.querySelector('#note-name'),\n    noteDateInput: document.querySelector('#note-date'),\n    noteContentInput: document.querySelector('#note-content'),\n    noteCategorySelect: document.querySelector('#note-category'),\n    showArchiveSelect: document.querySelector('#show-archive'),\n    summaryNotesTableBodyEl: document.querySelector('.summary-notes-body'),\n    submitFormBtnEdit: document.querySelector('.button-edit-note'),\n    submitFormBtn: document.querySelector('.button-add-note'),\n    closeModalBtn: document.querySelector('.button-close'),\n  };\n\n  // Event listeners\n  document.addEventListener('DOMContentLoaded', function () {\n    renderNotesList(notesList, categoriesInfo);\n    renderSummaryNotesInfo(notesList, archivedNote, categoriesInfo);\n  });\n  refs.submitFormBtn.addEventListener('click', e =>\n    addNote(e, notesList, archivedNote, categoriesInfo)\n  );\n  refs.notesTableBody.addEventListener('click', onÐ¡ontrolsClick);\n  refs.submitFormBtnEdit.addEventListener('click', e =>\n    changeNote(e, notesList, changedNote, archivedNote, categoriesInfo)\n  );\n  refs.showArchiveSelect.addEventListener('change', e =>\n    onShowArchiveSelectChange(e, notesList, archivedNote, categoriesInfo)\n  );\n  refs.closeModalBtn.addEventListener('click', closeModal);\n  refs.createNoteBtn.addEventListener('click', showModal);\n\n  function addNote(event, notes, archive, categories) {\n    event.preventDefault();\n\n    const formData = new FormData(refs.formEl);\n    if (refs.noteNameInput.value === '') {\n      alert('Please enter note name');\n      return;\n    }\n    if (refs.noteContentInput.value === '') {\n      alert('Please enter some note content');\n      return;\n    }\n    if (refs.noteDateInput.value === '') {\n      alert('Please enter note date');\n      return;\n    }\n    const newNote = {\n      id: nanoid(),\n      name: formData.get('note-name'),\n      created: formData.get('note-date'),\n      category: formData.get('note-category'),\n      content: formData.get('note-content'),\n    };\n\n    notes.push(newNote);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archive, categories);\n    closeModal();\n  }\n\n  function onÐ¡ontrolsClick(e) {\n    if (e.target.classList.contains('edit')) {\n      prefillFormWithNoteData(e.target, changedNote);\n    } else if (e.target.classList.contains('archive')) {\n      addToArchive(\n        e.target.parentElement.parentElement.id,\n        notesList,\n        archivedNote,\n        categoriesInfo\n      );\n    } else if (e.target.classList.contains('archive')) {\n      removeFromArchive(\n        e.target.parentElement.parentElement.id,\n        notesList,\n        archivedNote,\n        categoriesInfo\n      );\n    } else if (e.target.classList.contains('delete')) {\n      deleteNote(\n        e.target.parentElement.parentElement.id,\n        notesList,\n        archivedNote,\n        categoriesInfo\n      );\n    }\n  }\n\n  function prefillFormWithNoteData(elem, noteToEdit) {\n    showModal();\n    refs.submitFormBtn.classList.add('is-hidden');\n    refs.submitFormBtnEdit.classList.remove('is-hidden');\n    noteToEdit.id = elem.parentElement.parentElement.id;\n    refs.noteNameInput.value =\n      elem.parentElement.parentElement.children[1].innerText;\n    refs.noteDateInput.value = formatDate(\n      new Date(\n        Date.parse(elem.parentElement.parentElement.children[2].innerText)\n      )\n    );\n    refs.noteDateInput.setAttribute('disabled', 'disabled');\n    refs.noteCategorySelect.value =\n      elem.parentElement.parentElement.children[3].innerText;\n    refs.noteContentInput.value =\n      elem.parentElement.parentElement.children[4].innerText;\n  }\n\n  function changeNote(event, notes, noteToEdit, archive, categories) {\n    event.preventDefault();\n\n    const editdNoteIndex = notes.indexOf(\n      notes.find(note => note.id === noteToEdit.id)\n    );\n\n    noteToEdit.name = refs.noteNameInput.value;\n    noteToEdit.created = refs.noteDateInput.value;\n    noteToEdit.category = refs.noteCategorySelect.value;\n    noteToEdit.content = refs.noteContentInput.value;\n    noteToEdit.dates = dateParse(refs.noteContentInput.value);\n\n    notes.splice(editdNoteIndex, 1, noteToEdit);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archive, categories);\n    noteToEdit = {};\n    closeModal();\n  }\n\n  function addToArchive(id, notes, archive, categories) {\n    const noteToArchivate = notes.find(note => note.id === id);\n    archive.push(noteToArchivate);\n    const noteToArchivateIndex = notes.findIndex(note => note.id === id);\n    notes.splice(noteToArchivateIndex, 1);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archive, categories);\n  }\n\n  function removeFromArchive(id, notes, archive, categories) {\n    const noteToUnarchivate = archive.find(note => note.id === id);\n    notes.push(noteToUnarchivate);\n    const noteToUnarchivateIndex = archive.findIndex(note => note.id === id);\n    archive.splice(noteToUnarchivateIndex, 1);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archive, categories);\n    const archiveElList = document.querySelectorAll('.archive');\n    const unarchiveElList = document.querySelectorAll('.unarchive');\n    archiveElList.forEach(elem => elem.classList.add('is-hidden'));\n    unarchiveElList.forEach(elem => elem.classList.remove('is-hidden'));\n  }\n\n  function deleteNote(id, notes, archive, categories) {\n    const noteToDeliteIndex = notes.findIndex(note => note.id === id);\n    notes.splice(noteToDeliteIndex, 1);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archive, categories);\n  }\n\n  function onShowArchiveSelectChange(event, notes, archive, categories) {\n    switch (event.target.value) {\n      case 'archived':\n        renderNotesList(archive, categories);\n        const archiveElList = document.querySelectorAll('.archive');\n        const unarchiveElList = document.querySelectorAll('.unarchive');\n        archiveElList.forEach(elem => elem.classList.add('is-hidden'));\n        unarchiveElList.forEach(elem => elem.classList.remove('is-hidden'));\n\n        break;\n\n      case 'active':\n        renderNotesList(notes, categories);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function closeModal() {\n    refs.backdropNoteEl.classList.toggle('is-hidden');\n    refs.formEl.reset();\n    refs.noteDateInput.removeAttribute('disabled', 'false');\n    refs.submitFormBtn.classList.toggle('is-hidden');\n    refs.submitFormBtnEdit.classList.toggle('is-hidden');\n  }\n\n  function showModal() {\n    refs.backdropNoteEl.classList.toggle('is-hidden');\n  }\n\n  function renderNotesList(notes, categories) {\n    refs.notesTableBody.innerHTML = '';\n    //  render notes\n    return notes.map(note => {\n      renderOneNote(note, categories);\n    });\n  }\n\n  function renderOneNote(note, categories) {\n    const categoryForRender = categories.find(\n      item => item.category === note.category\n    );\n    const noteTableRowEl = document.createElement('tr');\n    noteTableRowEl.id = note.id;\n\n    const noteIconTableDatadEl = document.createElement('td');\n    noteIconTableDatadEl.innerHTML = `<span class=\"material-symbols-outlined category\">${categoryForRender.icon}</span>`;\n    noteTableRowEl.appendChild(noteIconTableDatadEl);\n\n    const noteNameTableDataEl = document.createElement('td');\n    noteNameTableDataEl.innerText = note.name;\n    noteNameTableDataEl.classList.add('table-data-note-name');\n    noteTableRowEl.appendChild(noteNameTableDataEl);\n\n    const noteCreatedTableDataEl = document.createElement('td');\n    noteCreatedTableDataEl.innerText = note.created;\n    noteTableRowEl.appendChild(noteCreatedTableDataEl);\n\n    const noteCategoryTableDataEl = document.createElement('td');\n    noteCategoryTableDataEl.innerText = note.category;\n    noteCategoryTableDataEl.classList.add('table-data-note-category');\n    noteTableRowEl.appendChild(noteCategoryTableDataEl);\n\n    const noteContentTableDataEl = document.createElement('td');\n    noteContentTableDataEl.innerText = note.content;\n    noteContentTableDataEl.classList.add('table-data-note-content');\n    noteTableRowEl.appendChild(noteContentTableDataEl);\n\n    const noteDatesTableDataEl = document.createElement('td');\n    noteDatesTableDataEl.innerText = dateParse(note.content);\n    noteDatesTableDataEl.classList.add('table-data-note-dates');\n    noteTableRowEl.appendChild(noteDatesTableDataEl);\n\n    const noteEditTableDataEl = document.createElement('td');\n    noteEditTableDataEl.innerHTML = `<span class=\"material-symbols-outlined edit\">edit</span>`;\n    noteTableRowEl.appendChild(noteEditTableDataEl);\n\n    const noteArchiveTableDataEl = document.createElement('td');\n    noteArchiveTableDataEl.innerHTML = `<span class=\"material-symbols-outlined archive\">archive</span>\n    <span class=\"material-symbols-outlined unarchive is-hidden\">unarchive</span>`;\n\n    noteTableRowEl.appendChild(noteArchiveTableDataEl);\n\n    const noteDeleteTableDataEl = document.createElement('td');\n    noteDeleteTableDataEl.innerHTML = `<span class=\"material-symbols-outlined delete\">delete</span>`;\n    noteTableRowEl.appendChild(noteDeleteTableDataEl);\n\n    refs.notesTableBody.appendChild(noteTableRowEl);\n  }\n\n  function renderSummaryNotesInfo(notes, archive, categories) {\n    refs.summaryNotesTableBodyEl.innerHTML = '';\n    categories.map(category => {\n      const noteTableRowEl = document.createElement('tr');\n      const noteIconTableDatadEl = document.createElement('td');\n      noteIconTableDatadEl.innerHTML = `<span class=\"material-symbols-outlined category\">${category.icon}</span>`;\n      noteTableRowEl.appendChild(noteIconTableDatadEl);\n      const noteCategoryNameTableDatadEl = document.createElement('td');\n      noteCategoryNameTableDatadEl.innerText = `${category.category}`;\n      noteTableRowEl.appendChild(noteCategoryNameTableDatadEl);\n      const amountActiveNotesPerCategoryEl = document.createElement('td');\n      amountActiveNotesPerCategoryEl.innerText = `${\n        notes.filter(note => note.category === category.category).length\n      }`;\n      noteTableRowEl.appendChild(amountActiveNotesPerCategoryEl);\n      const amountArchivedNotesPerCategoryEl = document.createElement('td');\n      amountArchivedNotesPerCategoryEl.innerText = `${\n        archive.filter(note => note.category === category.category).length\n      }`;\n      noteTableRowEl.appendChild(amountArchivedNotesPerCategoryEl);\n      refs.summaryNotesTableBodyEl.appendChild(noteTableRowEl);\n    });\n  }\n}\n\nNoteApp(initialNotesValues);\n","export function formatDate(date) {\n  let dd = date.getDate();\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n\n  let mm = date.getMonth() + 1;\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  let yyyy = date.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n","const notes = [\n  {\n    id: '1',\n    name: 'Shopping list',\n    created: '2023-04-20',\n    category: 'Task',\n    content: 'Tomato, bread',\n  },\n  {\n    id: '2',\n    name: 'The theory of evolution',\n    created: '2023-04-23',\n    category: 'Random Thought',\n    content: 'The evolution is ...',\n  },\n  {\n    id: '3',\n    name: 'New feature',\n    created: '2023-05-06',\n    category: 'Task',\n    content: 'Add new feature until 31/07/2023',\n  },\n  {\n    id: '4',\n    name: 'Motivation',\n    created: '2023-06-17',\n    category: 'Quote',\n    content: \"Believe you can and you're halfway there. Theodore Roosevelt\",\n  },\n  {\n    id: '5',\n    name: 'New feature',\n    created: '2023-07-08',\n    category: 'Task',\n    content: 'Add new feature until 30/07/2023',\n  },\n  {\n    id: '6',\n    name: 'Manicure',\n    created: '2023-07-29',\n    category: 'Task',\n    content: 'Manicure 30/07/2023 replaced to 09/08/2023 ',\n  },\n  {\n    id: '7',\n    name: 'Piknik',\n    created: '2023-07-29',\n    category: 'Idea',\n    content: 'Prepare small piknik in park on Sunday 06/08/2023 ',\n  },\n];\n\nexport default notes;\n"],"names":["$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","$d07e5c36d11153d3$export$d2fc3074ac87334f","string","match","join","initialNotes","categoriesInfo","category","icon","notesList","archivedNote","changedNote","refs","notesTableBody","document","querySelector","createNoteBtn","formEl","backdropNoteEl","noteNameInput","noteDateInput","noteContentInput","noteCategorySelect","showArchiveSelect","summaryNotesTableBodyEl","submitFormBtnEdit","submitFormBtn","closeModalBtn","closeModal","classList","toggle","reset","removeAttribute","showModal","renderNotesList","notes","categories","innerHTML","map","note","categoryForRender","find","item","noteTableRowEl","createElement","noteIconTableDatadEl","appendChild","noteNameTableDataEl","innerText","name","add","noteCreatedTableDataEl","created","noteCategoryTableDataEl","noteContentTableDataEl","content","noteDatesTableDataEl","noteEditTableDataEl","noteArchiveTableDataEl","noteDeleteTableDataEl","renderOneNote","renderSummaryNotesInfo","archive","noteCategoryNameTableDatadEl","amountActiveNotesPerCategoryEl","filter","length","amountArchivedNotesPerCategoryEl","addEventListener","e","event","preventDefault","formData","FormData","value","alert","newNote","get","push","addNote","target","contains","elem","noteToEdit","remove","parentElement","children","date","dd","getDate","mm","getMonth","getFullYear","Date","parse","setAttribute","noteToArchivate","noteToArchivateIndex","findIndex","splice","addToArchive","noteToUnarchivate","noteToUnarchivateIndex","archiveElList","querySelectorAll","unarchiveElList","forEach","removeFromArchive","noteToDeliteIndex","deleteNote","editdNoteIndex","indexOf","dates","changeNote","onShowArchiveSelectChange","$1f150824bfdf7952$var$NoteApp"],"version":3,"file":"index.db326ccd.js.map"}