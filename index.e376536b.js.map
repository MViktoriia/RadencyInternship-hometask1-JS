{"mappings":"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","sources":["node_modules/nanoid/index.browser.js","src/js/dateParse.js","src/js/notes.js","src/js/formatDate.js","src/js/notes_db.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export function dateParse(string) {\n  const regEx = /(0?[1-9]|[12][0-9]|3[01])\\/(0?[1-9]|1[012])\\/((19|20)\\d\\d)/g;\n  const result = string.match(regEx) || [];\n  return result.join(',');\n}\n","import { nanoid } from 'nanoid';\nimport initialNotesValues from './notes_db';\n// import { noteCategoriesIcons } from './notesCategoriesInfo';\nimport { formatDate } from './formatDate';\nimport { dateParse } from './dateParse';\n\nfunction Notepad(notes) {\n  const categories = [\n    { category: 'Task', icon: 'shopping_cart' },\n    { category: 'Random Thought', icon: 'psychology' },\n    { category: 'Idea', icon: 'lightbulb' },\n    { category: 'Quote', icon: 'format_quote' },\n  ];\n  const notesList = [...notes];\n  const archivedNote = [];\n  let changedNote = {};\n\n  // Selectors\n  const refs = {\n    notesTableBody: document.querySelector('.notes-body'),\n    createNoteBtn: document.querySelector('.create-notes-button'),\n    closeModalBtn: document.querySelector('.button-close'),\n    formEl: document.querySelector('.create-note-form'),\n    submitFormBtn: document.querySelector('.button-add-note'),\n    submitFormBtnEdit: document.querySelector('.button-edit-note'),\n    backdropNoteEl: document.querySelector('.backdrop-note'),\n    noteNameInput: document.querySelector('#note-name'),\n    noteDateInput: document.querySelector('#note-date'),\n    noteContentInput: document.querySelector('#note-content'),\n    noteCategorySelect: document.querySelector('#note-category'),\n    showArchiveSelect: document.querySelector('#show-archive'),\n    summaryNotesTableBodyEl: document.querySelector('.summary-notes-body'),\n  };\n\n  // Event listeners\n\n  refs.createNoteBtn.addEventListener('click', showModal);\n  refs.closeModalBtn.addEventListener('click', closeModal);\n  refs.submitFormBtn.addEventListener('click', e =>\n    addNote(e, notesList, archivedNote, categories)\n  );\n  refs.submitFormBtnEdit.addEventListener('click', e =>\n    changeNote(e, notesList, changedNote, archivedNote, categories)\n  );\n  refs.showArchiveSelect.addEventListener('change', e =>\n    onShowArchiveSelectChange(e, notesList, archivedNote, categories)\n  );\n\n  document.addEventListener('DOMContentLoaded', function () {\n    renderNotesList(notesList, categories);\n    renderSummaryNotesInfo(notesList, archivedNote, categories);\n  });\n\n  function renderNotesList(notesArr, categories) {\n    refs.notesTableBody.innerHTML = '';\n    //  render notes\n    notesArr.map(note => {\n      renderOneNote(note, categories);\n    });\n\n    // note remove\n    const deleteElList = document.querySelectorAll('td>span.delete');\n    deleteElList.forEach(deleteEl => {\n      deleteEl.addEventListener('click', () =>\n        deleteNote(\n          deleteEl.parentElement.parentElement.id,\n          notesList,\n          archivedNote,\n          categories\n        )\n      );\n    });\n\n    // note edit\n    const editElList = document.querySelectorAll('.edit');\n    editElList.forEach(editEl => {\n      editEl.addEventListener('click', () =>\n        prefillFormWithNoteData(editEl, changedNote)\n      );\n    });\n\n    // note archivate and unarchivate\n    const archiveElList = document.querySelectorAll('.archive');\n    const unarchiveElList = document.querySelectorAll('.unarchive');\n    archiveElList.forEach(archiveEl => {\n      archiveEl.addEventListener('click', () =>\n        addToArchive(\n          archiveEl.parentElement.parentElement.id,\n          notes,\n          archivedNote,\n          categories\n        )\n      );\n    });\n\n    unarchiveElList.forEach(unarchiveEl => {\n      unarchiveEl.addEventListener('click', () =>\n        removeFromArchive(\n          unarchiveEl.parentElement.parentElement.id,\n          notes,\n          archivedNote,\n          categories\n        )\n      );\n    });\n  }\n\n  function renderOneNote(note, categories) {\n    const categoryForRender = categories.find(\n      item => item.category === note.category\n    );\n    const noteTableRowEl = document.createElement('tr');\n    noteTableRowEl.id = note.id;\n\n    const noteIconTableDatadEl = document.createElement('td');\n    noteIconTableDatadEl.innerHTML = `<span class=\"material-symbols-outlined category\">${categoryForRender.icon}</span>`;\n    noteTableRowEl.appendChild(noteIconTableDatadEl);\n\n    const noteNameTableDataEl = document.createElement('td');\n    noteNameTableDataEl.innerText = note.name;\n    noteNameTableDataEl.classList.add('table-data-note-name');\n    noteTableRowEl.appendChild(noteNameTableDataEl);\n\n    const noteCreatedTableDataEl = document.createElement('td');\n    noteCreatedTableDataEl.innerText = note.created;\n    noteTableRowEl.appendChild(noteCreatedTableDataEl);\n\n    const noteCategoryTableDataEl = document.createElement('td');\n    noteCategoryTableDataEl.innerText = note.category;\n    noteCategoryTableDataEl.classList.add('table-data-note-category');\n    noteTableRowEl.appendChild(noteCategoryTableDataEl);\n\n    const noteContentTableDataEl = document.createElement('td');\n    noteContentTableDataEl.innerText = note.content;\n    noteContentTableDataEl.classList.add('table-data-note-content');\n    noteTableRowEl.appendChild(noteContentTableDataEl);\n\n    const noteDatesTableDataEl = document.createElement('td');\n    noteDatesTableDataEl.innerText = dateParse(note.content);\n    noteDatesTableDataEl.classList.add('table-data-note-dates');\n    noteTableRowEl.appendChild(noteDatesTableDataEl);\n\n    const noteEditTableDataEl = document.createElement('td');\n    noteEditTableDataEl.innerHTML = `<span class=\"material-symbols-outlined edit\">edit</span>`;\n    noteTableRowEl.appendChild(noteEditTableDataEl);\n\n    const noteArchiveTableDataEl = document.createElement('td');\n    noteArchiveTableDataEl.innerHTML = `<span class=\"material-symbols-outlined archive\">archive</span>\n    <span class=\"material-symbols-outlined unarchive is-hidden\">unarchive</span>`;\n\n    noteTableRowEl.appendChild(noteArchiveTableDataEl);\n\n    const noteDeleteTableDataEl = document.createElement('td');\n    noteDeleteTableDataEl.innerHTML = `<span class=\"material-symbols-outlined delete\">delete</span>`;\n    noteTableRowEl.appendChild(noteDeleteTableDataEl);\n\n    refs.notesTableBody.appendChild(noteTableRowEl);\n  }\n\n  function renderSummaryNotesInfo(notes, archive, categories) {\n    refs.summaryNotesTableBodyEl.innerHTML = '';\n    categories.map(category => {\n      const noteTableRowEl = document.createElement('tr');\n      const noteIconTableDatadEl = document.createElement('td');\n      noteIconTableDatadEl.innerHTML = `<span class=\"material-symbols-outlined category\">${category.icon}</span>`;\n      noteTableRowEl.appendChild(noteIconTableDatadEl);\n      const noteCategoryNameTableDatadEl = document.createElement('td');\n      noteCategoryNameTableDatadEl.innerText = `${category.category}`;\n      noteTableRowEl.appendChild(noteCategoryNameTableDatadEl);\n      const amountActiveNotesPerCategoryEl = document.createElement('td');\n      amountActiveNotesPerCategoryEl.innerText = `${\n        notes.filter(note => note.category === category.category).length\n      }`;\n      noteTableRowEl.appendChild(amountActiveNotesPerCategoryEl);\n      const amountArchivedNotesPerCategoryEl = document.createElement('td');\n      amountArchivedNotesPerCategoryEl.innerText = `${\n        archive.filter(note => note.category === category.category).length\n      }`;\n      noteTableRowEl.appendChild(amountArchivedNotesPerCategoryEl);\n      refs.summaryNotesTableBodyEl.appendChild(noteTableRowEl);\n    });\n  }\n\n  function addNote(event, notes, archivedNote, categories) {\n    event.preventDefault();\n    const formData = new FormData(refs.formEl);\n    if (refs.noteNameInput.value === '') {\n      alert('Please enter note name');\n      return;\n    }\n    const newNote = {\n      id: nanoid(),\n      name: formData.get('note-name'),\n      created: formData.get('note-date'),\n      category: formData.get('note-category'),\n      content: formData.get('note-content'),\n      archived: false,\n    };\n\n    notes.push(newNote);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archivedNote, categories);\n    closeModal();\n  }\n\n  function deleteNote(id, notes, archivedNote, categories) {\n    noteToDeliteIndex = notes.findIndex(note => note.id === id);\n    notes.splice(noteToDeliteIndex, 1);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archivedNote, categories);\n  }\n\n  function changeNote(event, notes, changedNote, archivedNote, categories) {\n    event.preventDefault();\n\n    const editdNoteIndex = notes.indexOf(\n      notes.find(note => note.id === changedNote.id)\n    );\n\n    changedNote.name = refs.noteNameInput.value;\n    changedNote.created = refs.noteDateInput.value;\n    changedNote.category = refs.noteCategorySelect.value;\n    changedNote.content = refs.noteContentInput.value;\n    changedNote.dates = dateParse(refs.noteContentInput.value);\n    changedNote.archived = false;\n\n    notes.splice(editdNoteIndex, 1, changedNote);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archivedNote, categories);\n    changedNote = {};\n    closeModal();\n  }\n\n  function prefillFormWithNoteData(elem, changedNote) {\n    showModal();\n    refs.submitFormBtn.classList.add('is-hidden');\n    refs.submitFormBtnEdit.classList.remove('is-hidden');\n    changedNote.id = elem.parentElement.parentElement.id;\n    refs.noteNameInput.value =\n      elem.parentElement.parentElement.children[1].innerText;\n    refs.noteDateInput.value = formatDate(\n      new Date(\n        Date.parse(elem.parentElement.parentElement.children[2].innerText)\n      )\n    );\n    refs.noteDateInput.setAttribute('disabled', 'disabled');\n    refs.noteCategorySelect.value =\n      elem.parentElement.parentElement.children[3].innerText;\n    refs.noteContentInput.value =\n      elem.parentElement.parentElement.children[4].innerText;\n  }\n\n  function addToArchive(id, notes, archivedNote, categories) {\n    noteToArchivate = notes.find(note => note.id === id);\n    archivedNote.push(noteToArchivate);\n    noteToArchivateIndex = notes.findIndex(note => note.id === id);\n    notes.splice(noteToArchivateIndex, 1);\n    renderNotesList(notes, categories);\n    renderSummaryNotesInfo(notes, archivedNote, categories);\n  }\n\n  function removeFromArchive(id, notes, archivedNote, categories) {\n    noteToUnarchivate = archivedNote.find(note => note.id === id);\n    notes.push(noteToUnarchivate);\n    noteToUnarchivateIndex = archivedNote.findIndex(note => note.id === id);\n    archivedNote.splice(noteToUnarchivateIndex, 1);\n    renderNotesList(archivedNote, categories);\n    renderSummaryNotesInfo(notes, archivedNote, categories);\n    const archiveElList = document.querySelectorAll('.archive');\n    const unarchiveElList = document.querySelectorAll('.unarchive');\n    archiveElList.forEach(elem => elem.classList.add('is-hidden'));\n    unarchiveElList.forEach(elem => elem.classList.remove('is-hidden'));\n  }\n\n  function showModal() {\n    refs.backdropNoteEl.classList.toggle('is-hidden');\n  }\n\n  function closeModal() {\n    refs.backdropNoteEl.classList.toggle('is-hidden');\n    refs.formEl.reset();\n    refs.noteDateInput.removeAttribute('disabled', 'false');\n    refs.submitFormBtn.classList.toggle('is-hidden');\n    refs.submitFormBtnEdit.classList.toggle('is-hidden');\n  }\n\n  function onShowArchiveSelectChange(event, notes, archivedNote, categories) {\n    switch (event.target.value) {\n      case 'archived':\n        renderNotesList(archivedNote, categories);\n        const archiveElList = document.querySelectorAll('.archive');\n        const unarchiveElList = document.querySelectorAll('.unarchive');\n        archiveElList.forEach(elem => elem.classList.add('is-hidden'));\n        unarchiveElList.forEach(elem => elem.classList.remove('is-hidden'));\n\n        break;\n\n      case 'active':\n        renderNotesList(notes, categories);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nNotepad(initialNotesValues);\n","export function formatDate(date) {\n  let dd = date.getDate();\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n\n  let mm = date.getMonth() + 1;\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  let yyyy = date.getFullYear();\n\n  return yyyy + '-' + mm + '-' + dd;\n}\n","const notes = [\n  {\n    id: '1',\n    name: 'Shopping list',\n    created: '2023-04-20',\n    category: 'Task',\n    content: 'Tomato, bread',\n  },\n  {\n    id: '2',\n    name: 'The theory of evolution',\n    created: '2023-04-23',\n    category: 'Random Thought',\n    content: 'The evolution is ...',\n  },\n  {\n    id: '3',\n    name: 'New feature',\n    created: '2023-05-06',\n    category: 'Task',\n    content: 'Add new feature until 31/07/2023',\n  },\n  {\n    id: '4',\n    name: 'Motivation',\n    created: '2023-06-17',\n    category: 'Quote',\n    content: \"Believe you can and you're halfway there. Theodore Roosevelt\",\n  },\n  {\n    id: '5',\n    name: 'New feature',\n    created: '2023-07-08',\n    category: 'Task',\n    content: 'Add new feature until 30/07/2023',\n  },\n  {\n    id: '6',\n    name: 'Manicure',\n    created: '2023-07-29',\n    category: 'Task',\n    content: 'Manicure 30/07/2023 replaced to 09/08/2023 ',\n  },\n  {\n    id: '7',\n    name: 'Piknik',\n    created: '2023-07-29',\n    category: 'Idea',\n    content: 'Prepare small piknik in park on Sunday 06/08/2023 ',\n  },\n];\n\nexport default notes;\n"],"names":["$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","$d07e5c36d11153d3$export$d2fc3074ac87334f","string","match","join","notes1","categories1","category","icon","notesList","archivedNote1","changedNote1","refs","notesTableBody","document","querySelector","createNoteBtn","closeModalBtn","formEl","submitFormBtn","submitFormBtnEdit","backdropNoteEl","noteNameInput","noteDateInput","noteContentInput","noteCategorySelect","showArchiveSelect","summaryNotesTableBodyEl","renderNotesList","notesArr","categories","innerHTML","map","note","categoryForRender","find","item","noteTableRowEl","createElement","noteIconTableDatadEl","appendChild","noteNameTableDataEl","innerText","name","classList","add","noteCreatedTableDataEl","created","noteCategoryTableDataEl","noteContentTableDataEl","content","noteDatesTableDataEl","noteEditTableDataEl","noteArchiveTableDataEl","noteDeleteTableDataEl","renderOneNote","querySelectorAll","forEach","deleteEl","addEventListener","notes","archivedNote","noteToDeliteIndex","findIndex","splice","renderSummaryNotesInfo","deleteNote","parentElement","editEl","prefillFormWithNoteData","elem","changedNote","showModal","remove","value","children","date","dd","getDate","mm","getMonth","getFullYear","Date","parse","setAttribute","archiveElList","unarchiveElList","archiveEl","noteToArchivate","push","noteToArchivateIndex","addToArchive","unarchiveEl","noteToUnarchivate","noteToUnarchivateIndex","removeFromArchive","archive","noteCategoryNameTableDatadEl","amountActiveNotesPerCategoryEl","filter","length","amountArchivedNotesPerCategoryEl","toggle","closeModal","reset","removeAttribute","e","event","preventDefault","formData","FormData","alert","newNote","get","archived","addNote","editdNoteIndex","indexOf","dates","changeNote","target","onShowArchiveSelectChange","$320552736c1199f4$var$Notepad"],"version":3,"file":"index.e376536b.js.map"}